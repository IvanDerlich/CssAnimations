.background {
    background-image: url('../public/assets/market-menu.jpg');
    background-size: cover;
    width: 143vh;
    height: 100vh;
    transition: all 5s ease-out;
}

.backgroundShadowed {
    background-image: linear-gradient( rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8) ), url('../public/assets/market-menu.jpg');
    // background-size: cover;
    width: 143vh;
    height: 100vh;
}

.building {  
    background-size: 143vh 100vh;
    background-repeat: no-repeat;
    transition: all .2s ease-out;
    position: absolute;    
}

@mixin shadowedBuilding {
    background-size: 143vh 100vh;
    position: absolute;
    background-repeat: no-repeat;
        &:hover {
        transform: scale(1,1);
    }
}

@mixin selectedBuilding {
    &:hover {
        transform: scale(1) translate(0,0);
    }
    width: 35vh;    
    height: 35vh;
    position: fixed;
    left: 0;
    top: 0;
}

@mixin forestGeometry {
    width: 55vh;    
    height: 50vh;
    left: 0;
    top: 0;
}

.forest {
    background-image: url('../public/assets/Forest.png');
    @include forestGeometry();
    &:hover {
        transform: scale(1.4,1.4) translate(4.5vh,4vh);
    }
}

.forestShadowed {
    opacity: 0.2;
    @include shadowedBuilding();    
}

.forestSelected {
    @include selectedBuilding();
    background-size: 80vh 56vh;    
}

@mixin ludusGeometry {
    width: 35vh;
    height: 26vh;
    left: 95vh;
    top: 63vh;
    background-position: -95vh -63vh; 
}

.ludus {
    background-image: url('../public/assets/Ludus.png');
    @include ludusGeometry();
    &:hover {
        transform: scale(1.4,1.4);
    }
}

.ludusShadowed {
    opacity: 0.2;
    @include shadowedBuilding(); 
}

.ludusSelected {
    @include selectedBuilding()
}
